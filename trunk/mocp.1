.TH MOC 1 "25 December 2005" "Version 2.4.0" "music on console"

.SH NAME
MOC \- console audio player

.SH SYNOPSIS
.B mocp
[OPTIONS] [FILE ...]

.SH DESRIPTION

MOC is a console audio player with simple ncurses interface. It supports
OGG, wave and MP3 formats. Just run mocp, go to some directory using
the menu and press enter to start playing the file. The program will
automatically play the rest of the files in the directory.

With no options and no file arguments the program begins in current
directory or in MusicDir if the StartInMusicDir option is set. If you
give a directory on the command line, MOC will try to go there. With
files or multiple directories, everything will be added to the playlist
recursively.

.SH OPTIONS
If an option can be also set in the configuration file, the command line
overrides it.

.TP
.I -D --debug
Run in debug mode. The client and server log much information to debug
files.  Don't use this, the server log is large.  This is only available
if MOC was compiled without --disable-debug.

.TP
.I -S --server
Run only the server and exit.

.TP
.I -F --foreground
Implies -S. Run the server in foreground and log everything to stdout.

.TP
.I -R --sound-driver NAME
Use the specified sound driver. This can be OSS, ALSA or null (for
debugging).  Some of the drivers could not be compiled in. This option
is called SoundDriver in configuration file.

.TP
.I -m --music-dir
Start in MusicDir (set in configuration file). This can be also set in
configuration file as StartInMusicDir.

.TP
.I -a --append
Append files, directories (recursively) and playlists given after options
to the playlist. Don't start the interface.

.TP
.I -c --clear
Clear the playlist.

.TP
.I -p --play
Start playing from the first item on the playlist.

.TP
.I -f --next
Request playing the next song from the server's playlist.

.TP
.I -r --previous
Request playing the previous song from the server's playlist.

.TP
.I -s --stop
Request the server stop playing.

.TP
.I -x --exit
Bring down the server.

.TP
.I -P --pause
Request the server pause playing.

.TP
.I -U --unpause
Request the server unpause playing.

.TP
.I -G --toggle-pause
Toggle between play/pause.

.TP
.I -k --seek N
Seek forward (positive) or backward (negative) by N seconds in the file
currently being played.

.TP
.I -T --theme theme
Use a theme file. If the path is not absolute, the file will be searched
in /usr/share/moc/themes/ (depends on installation prefix), ~/.moc/themes/
and in the current directory.

.TP
.I -C --config FILE
Use the specified config file instead of the default.

.TP
.I -M --moc-dir DIR
Use the specified MOC directory instead of the default. This also causes
the config file from that directory to be used. This can be also specified
in the config file using the MOCDir option.

.TP
.I -y --sync
This copy of the interface will be synchronizing the playlist with other
clients. This option is called SyncPlaylist in the configuration file.

.TP
.I -n --nosync
This copy of the interface will not be synchronizing its playlist with other
clients (see above).

.TP
.I -A --ascii
Use ASCII characters to draw lines. (This helps on some terminals.)

.TP
.I -i --info
Print the information about the file currently being played.

.TP
.I -Q --format FORMAT_STRING
Print information about the file currently being played using a format
string.  Replace string sequences with the actual information:

.TP
State
%state
.TP
File
%file
.TP
Title
%title
.TP
Artist
%artist
.TP
SongTitle
%song
.TP
Album
%album
.TP
TotalTime
%tt
.TP
TimeLeft
%tl
.TP
TotalSec
%ts
.TP
CurrentTime
%ct
.TP
CurrentSec
%cs
.TP
Bitrate
%b
.TP
Rate
%r
.TP

It is also possible to use variables from the FormatString configuration option.

.TP
.I -e --recursively
Alias for -a for backward compatibility.

.TP
.I -h --help
Print a list of options with short descriptions and exit.

.TP
.I -V --version
Print the program version and exit.

.TP
.I -v --volume
Adjust the mixer volume. You can set (-v 50) or adjust (-v +10, -v -10).

.TP
.I -t --toggle
.TP
.I -o --on
.TP
.I -u --off

Followed by a list of identifiers, these will control MOC's playlist
options. Valid identifiers: shuffle, repeat and autonext.  They can be
shortened to s, r and n respectively.

Example: -t shuffle,r,n would toggle shuffle repeat and autonext all at once.

.TP
.I -j --jump N
Jump to some position in the current file. N is number of seconds
followed by 's' or percent of total file time followed by '%'.

Examples: -j 10s, -j 50%

.SH FILES

.TP
.I ~/.moc

MOC directory for configuration file, socket, pid file and other data.

.TP
.I ~/.moc/config

Configuration file for MOC. The format is very simple; to see how to use
it look at the example configuration file (config.example) distributed
with the program.

.TP
.I ~/.moc/themes
.TP
.I /usr/share/moc/themes

Default directories for theme files.

.TP
.I /usr/share/moc/decoder_plugins

Default directories for audio decoder plugins.

.SH BUGS
Command line options that affect the server bahaviour (like
--sound-driver) are ignored if the server is already running at the time
of executing mocp. The user is not warned about this.

.SH HOMEPAGE
http://moc.daper.net

.SH AUTHOR

Damian Pietras <daper@daper.net>
